@model Fitness.Models.ExerciseList

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>ExerciseList</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Type)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Type)
        </dd>

    </dl>
</div>

@if (ViewBag.NoStrength == false || ViewBag.NoAerobic == false)
{


    if (Model.Type == "Strength")
    {
        <div class="col-md-12" id="chart">
            <img src="@Url.Action("CreateStrengthChart", Model)" height="600" width="800" />
        </div>
        <table class="table">
            <tr>
                <th>
                    Reps
                </th>
                <th>
                    Sets
                </th>
                <th>
                    Weight
                </th>
                <th>
                    Date Recorded
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.StrengthExercises)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Rep)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Sets)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Weight)
                    </td>
                    <td>
                        @item.DateRecorded.ToShortDateString()
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "StrengthExercises", new { id = item.ExerciseID }, null) |
                        @Html.ActionLink("Details", "Details", "StrengthExercises", new { id = item.ExerciseID }, null) |
                        @Html.ActionLink("Delete", "Delete", "StrengthExercises", new { id = item.ExerciseID }, null)
                    </td>
                </tr>
            }

        </table>

        <div id="Modal" class="modal fade" role="dialog">
            <div class="modal-dialog modal-lg">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Add new exercise</h4>
                    </div>
                    <div class="modal-body">
                        @Html.Action("CreateModal", "StrengthExercises", new { id = Model.ExerciseListID })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>

    }
    else
    {
       <div class="col-md-12">
           @Html.DropDownList("ChartType", (SelectList)ViewBag.focus, htmlAttributes: new { @class = "form-control" })
            <div class="col-md-12" id="durationchart" style="display:inline;">
                <img src="@Url.Action("CreateAerobicDurationChart", Model)" height="600" width="800" />
            </div>
            <div class="col-md-12" id="lengthchart" style="display:none;">
                <img src="@Url.Action("CreateAerobicLengthChart", Model)" height="600" width="800" />
            </div>
        </div>
        <table class="table">
            <tr>
                <th>
                    Duration
                </th>
                <th>
                    Length
                </th>
                <th>
                    Date Recorded
                </th>
                <th>
                    Exercise Name
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.AerobicExercises)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Duration)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Length)
                    </td>
                    <td>
                        @item.DateRecorded.ToShortDateString()
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExerciseList.Name)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", "AerobicExercises", new { id = item.AerobicExerciseID }, null) |
                        @Html.ActionLink("Details", "Details", "AerobicExercises", new { id = item.AerobicExerciseID }, null) |
                        @Html.ActionLink("Delete", "Delete", "AerobicExercises", new { id = item.AerobicExerciseID }, null)
                    </td>
                </tr>
            }

        </table>

        <div id="Modal" class="modal fade" role="dialog">
            <div class="modal-dialog modal-lg">
                <!-- Modal content-->
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Add new exercise</h4>
                    </div>
                    <div class="modal-body">
                        @Html.Action("CreateModal", "AerobicExercises", new { id = Model.ExerciseListID })
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>

            </div>
        </div>

    }

}
else
{
    <h4 class="text-warning">No data recorded</h4>
}

<p>
    <button type="button" class="btn btn-success" data-toggle="modal" data-target="#Modal">Add new entry</button>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-default" })
    @Html.ActionLink("Edit Exercise", "Edit", "ExerciseLists", new { id = Model.ExerciseListID }, new { @class = "btn btn-default" })
    @Html.ActionLink("Delete Exercise", "Delete", "ExerciseLists", new { id = Model.ExerciseListID }, new { @class = "btn btn-warning" })
    
</p>

@section Scripts {
    <script>
        $("#ChartType").on("change", function () {
            var listIndex = document.getElementById("ChartType").selectedIndex;
            if (listIndex == 0) {
                $("#lengthchart").fadeOut(function () {
                    $("#durationchart").fadeIn();
                });
                
            } else {
                $("#durationchart").fadeOut(function () {
                    $("#lengthchart").fadeIn();
                });
                
            }
        });

        $(document).ready(function () {
            $('#Duration').mask('00:00:00', { placeholder: '00:00:00' });

        });

    </script>
    
    
    
    }