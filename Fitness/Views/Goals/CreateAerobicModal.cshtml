@model Fitness.Models.AerobicGoal


@using (Html.BeginForm("Create", "AerobicGoals", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.ExerciseListID, "ExerciseListID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ExerciseListID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ActionLink("Add new exercise", "Create", "AerobicExercises")
                @Html.ValidationMessageFor(model => model.ExerciseListID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Length, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Length, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Length, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Focus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Focus, (SelectList)ViewBag.Focus, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Focus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
        $(document).ready(function () {
            $("#Duration").mask("00:00:00", { placeholder: "00:00:00" });
            $("#Length").prop("disabled", "true");
        });

        $("#Focus").ready(function () {
            $("#Focus").on("change", function () {
                var listIndex = document.getElementById("Focus").selectedIndex;
                console.log(listIndex);
                if (listIndex == 0) {
                    $("#Duration").prop("disabled", "false");
                    $("#Duration").removeAttr("disabled");
                    $("#Length").prop("disabled", "true");
                } else {
                    $("#Duration").prop("disabled", "true");
                    $("#Length").prop("disabled", "false");
                    $("#Length").removeAttr("disabled");
                }
            });
        });
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
